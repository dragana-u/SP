//Од стандарден влез се внесуваат непознат број на реченици претставени преку 
//текстуални низи (стрингови) секоја не подолга од 100 знаци и секоја во нов ред. 
//Програмата треба да го најде стрингот кој содржи најмногу сврзници и да го испечати заедно 
//со бројот на најдените сврзници. За сврзници се сметаат сите зборови составени од една, две или три букви. 
//Зборовите во текстуалната низа се одделени со едно или повеќе прзани места и/или интерпункциски знак.
//Броењето на сврзници во дадена текстуална низа треба да се реализира во посебна функција. 
//Решенијата без користење функција ќе бидат оценети со најмногу 40% од поените.
//Ако има повеќе реченици со ист максимален број на сврзници, се печати прво најдената.
//Објаснување на тест примерот:
//Бројот на сврзници по реченици е 2, 3, 4, 2, 4 и 7 соодветно. Најмногу сврзници има по последната реченица па се печати бројот 7 и содржината на таа реченица.

#include <stdio.h>
#include <string.h>
#include <ctype.h>
int svrznici(char *a){
    int brojac=0,vistinskiBrojac=0;
    int i;
    for(i=0;i< strlen(a);i++){
        if(isalpha(a[i])){
            brojac++;
        }else{
            if(brojac<=3 && brojac>0) vistinskiBrojac++;
            brojac=0;
        }
    }
    // if(brojac<=3 && brojac!=0) vistinskiBrojac++;
    return vistinskiBrojac;
}
char clean(char *a){
    a[strlen(a)-1]='\0';
}
int main() {
    char text[101],text2[101];
    int i, j,max;
    for (i = 0;;i++) {
        fgets(text, sizeof(text), stdin);
        if(strlen(text)<0){
            break;
        }
        if(!isalpha(text[0]) && !isdigit(text[0]) && !ispunct(text[0]) && !isspace(text[0])){
            break;
        }
        clean(text);
        svrznici(text);
        if(i==0){
            max= svrznici(text);
            for(j=0;j< strlen(text);j++){
                text2[j]=text[j];
            }
            text2[j]='\0';
        }
        if(svrznici(text)>max){
            max= svrznici(text);
            for(j=0;j< strlen(text);j++){
                text2[j]=text[j];
            }
            text2[j]='\0';
        }
    }
   if(max) {
       printf("%d: ", max);
       printf("%s", text2);
   }
}
