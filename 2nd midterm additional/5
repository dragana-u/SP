//Еден елемент се заматува ако се најде аритметичка средина на елементот и сите негови соседи. 
//Сосед на еден елемент се сите елементи кои припаѓаат на матрицата и се  околу истиот елемент (хоризонтално, вертикално и дијагонално). 
//Во датотеката input.txt е сместена матрица од реални броеви (3 < n,m < 50). 
//Во првиот ред се дефинирани бројот на редици и колони на матрицата и во секој преостанат ред е 
//внесен еден ред од матрицата (види пример).По читањето на матрицата, од стандарден влез се внесуваат и 
//2 пара координати на матрицата (ред и колона) кои го репрезентираат горниот-лев и долниот-десен елемент од регионот.
//Потребно е да генеирате нова матрица во која ќе ги заматите сите елементи кои припаѓаат на регионот. 
//Новодобиената матрица, во истиот формат, треба да се запише во датотеката output.txt.

#include <stdio.h>
#include <math.h>

#define MAX 50

void printFile() {

    FILE *f=fopen("output.txt","r");
    char line[1000];
    while(!feof(f)){
        fgets(line,1000,f);
        if (feof(f))
            break;
        printf("%s",line);
    }
    fclose(f);
}

void wtf(){
    FILE *f=fopen("input.txt","w");

    int row,column,i,j;
    float el;
    scanf("%d %d", &row, &column);

    fprintf(f,"%d %d\n",row, column);

    for (i=0; i<row; ++i){
        for (j=0; j<column; ++j){
            scanf("%f", &el);
            fprintf(f, "%.2f ", el);
        }
        fputc('\n',f);
    }
    fclose(f);

    return;
}
int main(){
    wtf();
    // Your code starts here!
    FILE *input=fopen("input.txt","r");
    FILE *output=fopen("output.txt","w");
    
    float matrix[100][100];
    int n,m;
    int redPoc,kolonaPoc, redKraj, kolonaKraj;
    fscanf(input,"%d %d",&n,&m);
    int i,j;
    float temp[100][100];
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            fscanf(input,"%f",&matrix[i][j]);
        }
    }
        for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            temp[i][j]=matrix[i][j];
        }
    }
   scanf("%d %d %d %d",&redPoc,&kolonaPoc,&redKraj,&kolonaKraj);
    float ar, sum=0,count=0;
    for(i=redPoc;i<=redKraj;i++){
        for(j=kolonaPoc;j<=kolonaKraj;j++){
            if((i-1)>=0){
                sum+=matrix[i-1][j];
                count++;
            }
            if((i+1)<n){
                sum+=matrix[i+1][j];
                count++;
            }
            if((j-1)>=0){
                sum+=matrix[i][j-1];
                count++;
            }
            if((j+1)<m){
                sum+=matrix[i][j+1];
                count++;
            }
            if((j-1)>=0 && (i-1)>=0){
                sum+=matrix[i-1][j-1];
                count++;
            }
            if((j+1)<m && (i+1)<n){
                sum+=matrix[i+1][j+1];
                count++;
            }
            if((j-1)>=0 && (i+1)<n){
                sum+=matrix[i+1][j-1];
                count++;
            }
            if((j+1)<m && (i-1)>=0){
                sum+=matrix[i-1][j+1];
                count++;
            }
            sum+=matrix[i][j];
            count++;
            ar= sum/count;
            temp[i][j]=ar;
            sum=0, count=0,ar=0;
        }
    }
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            fprintf(output,"%.2f ",temp[i][j]);
        }
        fprintf(output,"\n");
    }


    fclose(input);
    fclose(output);
    // Your code ends here!
    printFile();

    return 0;
}
