//За еден природен број а велиме дека е порамнување на друг природен број b ако и 
//само ако цифрите еднакви на 9 во бројот b се заменети со цифрата 7 во бројот а.
//Пример. Бројот 734775 е порамнување на бројот 934795.
//Од стандарден влез се внесуваат непознат број на цели броеви (не повеќе од 100), се додека не се внесе нешто што не може да се интерпретира како цел број.
//Ваша задача е да ги отпечатите најмалите 5 од порамнувањата на сите внесени броеви, по редослед од најмалиот кон најголемиот.
//Забелешка: Доколку се внесат помалку од 5 броеви, тогаш печатите толку броеви колку што се соодветно внесени.
//Наоѓањето на порамнувањето на даден број треба да се реализира во посебна рекурзивна функција poramnet(int a).
//Пример.
//За броевите: 9592, 69403, 100007, 6, 987, 6977, 33439,
//треба да се најдат нивните порамнувања ( тоа се: 7572, 67403, 100007, 6, 787, 6777 и 33437, соодветно),
//и да се отпечатат најмалите 5 од нив по овој редослед: 6 787 6777 7572 33437.
//ЗАБРАНЕТО е користење на глобални променливи.

#include <stdio.h>
int poramnetBroj(int number){
   if(number==0){
       return 0;
   }else if(number%10==9){
       return 7 + poramnetBroj(number/10)*10;
   }else return number%10+ poramnetBroj(number/10)*10;
}
void sortNumbers(int *array,int n){
    int k,temp,m;
    for(k=0;k<n;k++){
        for(m=k+1;m<n;m++) {
            if (array[k] > array[m]) {
                temp = array[k];
                array[k] = array[m];
                array[m] = temp;
            }
        }
    }
}
int main(){
    int broj, i=0,j=0;
    int array[100];
    while(scanf("%d",&broj) && ++i<100){
            array[j]=poramnetBroj(broj);
            j++;
        }
    sortNumbers(array,i);
    if(i>5) {
        for (j = 0; j < 5; j++) {
            printf("%d ", array[j]);
        }
    }else for (j = 0; j < i; j++) {
            printf("%d ", array[j]);
        }
}
