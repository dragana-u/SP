//Од стаднарден влез се читаат N низи од знаци (стрингови) не подолги од 80 знаци. На почетокот на програмата се читаат два цели броеви:
//N - бројот на низи од знаци кои ќе се читаат и
//X - поместување.
//Секоја од вчитаните низи од знаци треба да се трансформира на тој начин што секоја од малите и големите букви (a-z, A-Z) 
//се заменува со истата буква поместена X места понапред во азбуката (a-z). 
//Ако се надмине опсегот на буквите во азбуката, се продолжува циклично од почетокот на азбуката. Трансформираната низа да се отпечати на СИ.
//Трансформацијата да се имплементира со посебна рекурзивна функција.
//Пример:
//Welcome -> трансформирано со поместување 5 -> Bjqhtrj

#include <stdio.h>
#include <ctype.h>
#include <string.h>
void clean(char *text){
    text[strlen(text)-1]='\0';
}
char transform(char *a,int pomestuvanje){
    int i, n= strlen(a);
    int temp;
    for(i=0;i<n;i++){
        if(isalpha(a[i])){
            temp=a[i];
//            a[i]=a[i]+pomestuvanje;
//            if(!isalpha(a[i])){
                if(isupper(temp)){
                    a[i]=(temp+pomestuvanje-65)%26+65;
                }else{
                    a[i]=(temp+pomestuvanje-97)%26+97;
                }
        }
    }
}
int main(){
    int n,x;
    char array[81];
    scanf("%d %d\n",&n,&x);
    int i;
    for(i=0;i<n;i++){
        fgets(array,80,stdin);
        clean(array);
        transform(array,x);
        printf("%s\n",array);
    }
}
